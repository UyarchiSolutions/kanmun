const express = require('express');
const PartnerSetPriceController = require('../../controllers/partner.setPrice.controller');
const PartnerAuth = require('../../controllers/PartnerAuth.controller');
const router = express.Router();
router.route('/').post(PartnerSetPriceController.SetPartnerPrice);
router.route('/AddProductByPartner').post(PartnerAuth, PartnerSetPriceController.AddProductByPartner);
router.route('/Fetch/Productby/Partner/:id').get(PartnerAuth, PartnerSetPriceController.FetchProductbyPartner);
router.route('/create/Active/Cart').post(PartnerAuth, PartnerSetPriceController.create_Active_cart);
router.route('/get/Active/CartBy_partner').get(PartnerAuth, PartnerSetPriceController.getActiveCartBy_partner);
router.route('/create/Partner/ShopOrder').post(PartnerAuth, PartnerSetPriceController.create_PartnerShopOrder);
router.route('/getOrdersbycart/:id').get(PartnerSetPriceController.getOrdersbycart);
router.route('/getOrdered/Products/:id').get(PartnerSetPriceController.getOrderedProducts);
router.route('/updateAddOnStock').post(PartnerSetPriceController.updateAddOnStock);
router.route('/Return_Wastage_inCloseStock').post(PartnerSetPriceController.Return_Wastage_inCloseStock);
router.route('/getCart/Ordered/Products/').get(PartnerAuth, PartnerSetPriceController.getCart_Ordered_Products);
router.route('/distributions/getOrder/For/CurrentDateByCart').get(PartnerSetPriceController.getOrder_For_CurrentDateByCart);
router.route('/DistributeGIven').post(PartnerSetPriceController.DistributeGIven);
router.route('/getCartOrderBy/Product').get(PartnerAuth, PartnerSetPriceController.getCartOrderByProduct);
// partner request order to Admin
router.route('/createPartnerOrder/FromAdmin').post(PartnerAuth, PartnerSetPriceController.createPartnerOrder_FromAdmin);
router.route('/getOrders/ByPartner').get(PartnerAuth, PartnerSetPriceController.getOrdersByPartner);
router.route('/getPartner/Orders').get(PartnerSetPriceController.getPartner_Orders);
router.route('/update/Partner/Individual/Orders').post(PartnerSetPriceController.update_Partner_Individual_Orders);
router.route('/orderChange/Status/:id').put(PartnerSetPriceController.orderChange_Status);
router.route('/after/Ack/getAck_Orders').get(PartnerSetPriceController.getAck_Orders);
router.route('/getPartner/Ordered/Products/:id').get(PartnerSetPriceController.getPartner_Ordered_Products);
router.route('/Add_new_vehicle').post(PartnerSetPriceController.Add_new_vehicle);
router.route('/all/vehicle').get(PartnerSetPriceController.getAll_Vehicles);
router.route('/UpdateVehicleById/:id').put(PartnerSetPriceController.UpdateVehicleById);
router.route('/update/Partnwe/Order/:id').put(PartnerSetPriceController.update_Partnwe_Order);
router.route('/getLoadedOrders').get(PartnerSetPriceController.getLoadedOrders);
router.route('/getFetchdata/For/bills/:id').get(PartnerSetPriceController.getFetchdata_For_bills);
router.route('/Bill/GenerateById').post(PartnerSetPriceController.Bill_GenerateById);
router.route('/stockUpdateByCart').post(PartnerSetPriceController.stockUpdateByCart);
router.route('/getCartReports/:id').get(PartnerSetPriceController.getCartReports);
module.exports = router;
